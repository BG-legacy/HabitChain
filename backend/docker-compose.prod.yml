services:
  # HabitChain Backend API (Production)
  habitchain-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: habitchain-backend-prod
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_HOST: aws-0-us-east-2.pooler.supabase.com
      DB_NAME: postgres
      DB_USERNAME: postgres.ekmnikbqyhgiomqkgcet
      DB_PASSWORD: postgres
      DB_PORT: 6543
      DB_SSL_MODE: Require
      DB_TRUST_SERVER_CERTIFICATE: true
      
      # JWT Configuration
      JWT_SECRET_KEY: YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      JWT_ISSUER: HabitChainAPI
      JWT_AUDIENCE: HabitChainClient
      JWT_EXPIRE_MINUTES: 60
      
      # OpenAI Configuration (optional - set your own key)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_MODEL: gpt-4o-mini
      OPENAI_MAX_TOKENS: 1000
      OPENAI_TEMPERATURE: 0.7
      
      # ASP.NET Core Configuration
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ASPNETCORE_HTTP_PORTS: 8080
      ASPNETCORE_HTTPS_PORTS: ""
      
      # Database connection resiliency
      DB_CONNECTION_TIMEOUT: 30
      DB_COMMAND_TIMEOUT: 30
      DB_POOLING: true
      DB_MIN_POOL_SIZE: 1
      DB_MAX_POOL_SIZE: 20
      
      # Logging configuration
      LOGGING__LOGLEVEL__DEFAULT: Information
      LOGGING__LOGLEVEL__MICROSOFT_ASPNETCORE: Warning
      LOGGING__LOGLEVEL__MICROSOFT_ENTITYFRAMEWORKCORE: Warning
    ports:
      - "8080:8080"
    volumes:
      # Mount logs directory for debugging
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25' 